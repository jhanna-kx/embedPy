version: 1.0.{build}
image:
- Visual Studio 2017
artifacts:
- path: embedPy_windows-$(appveyor_repo_tag_name).zip
skip_non_tags: false
platform: x64
build_script:
- cmd: >-

    curl -fsSL -o k.h https://github.com/KxSystems/kdb/raw/master/c/c/k.h 

    curl -fsSL -o q.lib https://github.com/KxSystems/kdb/raw/master/w64/q.lib

    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

    mkdir w64 

    cl /LD /DKXVER=3 /Fep.dll /O2 py.c q.lib

    move p.dll w64 

    set PATH=C:\Miniconda3-x64;C:\Miniconda3-x64\Scripts;%PATH%

    call "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
 
    call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64

    conda install -y conda-build

    if defined QLIC_KC ( echo|set /P=%QLIC_KC% > kc.lic.enc & certutil -decode kc.lic.enc kc.lic & set QLIC=%CD%)

    conda build -c kx/label/dev --output conda-recipe > packagename.txt

    conda build -c kx/label/dev conda-recipe

    set /P CONDAPACKAGE=<packagename.txt

after_build:
- cmd: >-

    if "%APPVEYOR_REPO_TAG%"=="true" ( 7z a embedPy_windows-%APPVEYOR_REPO_TAG_NAME%.zip p.q p.k test.q tests w64/p.dll LICENSE README.md && appveyor PushArtifact embedPy_windows-%APPVEYOR_REPO_TAG_NAME%.zip )

    if "%APPVEYOR_REPO_TAG%"=="false" ( 7z a embedPy_windows-%APPVEYOR_REPO_BRANCH%-%APPVEYOR_BUILD_VERSION%.zip p.q p.k test.q tests w64/p.dll LICENSE README.md && appveyor PushArtifact embedPy_windows-%APPVEYOR_REPO_BRANCH%-%APPVEYOR_BUILD_VERSION%.zip )

    appveyor PushArtifact %CONDAPACKAGE%

deploy:
 release: $(appveyor_repo_tag_name)
 provider: GitHub
 auth_token: $(GITHUB_APIKEY)
 on:
  appveyor_repo_tag: true
 

